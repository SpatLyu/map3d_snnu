library(sf)
library(tidyverse)

shopping = tibble::tibble(address = "国展购物广场,南岗区,哈尔滨市,中国") |> 
  tidygeocoder::geocode(address,method = 'osm') |> 
  st_as_sf(coords = c("long","lat"),
           crs = 4326)

shoppingb = shopping |> 
  st_transform(32652) |> 
  st_buffer(dist = units::set_units(750,'m')) |> 
  lwgeom::st_minimum_bounding_circle() |> 
  st_transform(4326)
mapview::mapview(shoppingb)

shoppingbb = shoppingb |> 
  st_bbox() |> 
  as.double()

library(osmdata)

opq(bbox = shoppingbb) %>% 
  add_osm_features(features = list(
    'landuse' = c('grass','orchard','forest'),
    'leisure' = 'park')) %>% 
  osmdata_sf() %>% 
  .$osm_polygons %>% 
  select(name) %>% 
  st_make_valid() %>% 
  write_sf('./data/block.gpkg',layer = 'green',overwrite = T)

block = read_sf('./data/block.gpkg',layer = 'green') %>% 
  # dplyr::mutate(fid = seq(1,nrow(.),by = 1))
  tibble::rowid_to_column(var = 'fid') %>% 
  dplyr::filter(fid %in% c(10,11,30,31)) %>% 
  dplyr::mutate(name = paste0(c("B","C","A","D"),"区")) %>% 
  dplyr::select(-fid) %>% 
  dplyr::arrange(name)
write_sf(block,'./data/block.gpkg',layer = 'block',overwrite = T)

block = read_sf('./data/block.gpkg',layer = 'block')

block_all = block %>% 
  st_geometry() %>% 
  st_union() %>% 
  st_sf(name = "花园街历史文化街区",
        geometry = .) %>% 
  tibble::as_tibble() %>% 
  st_as_sf()
write_sf(block_all,'./data/block.gpkg',layer = 'block_all',overwrite = T)

block_all = read_sf('./data/block.gpkg',layer = 'block_all')

block_center = block_all |> 
  st_transform(32652) |> 
  lwgeom::st_minimum_bounding_circle() |> 
  st_centroid() |> 
  st_transform(4326)
mapview::mapview(block_center)
write_sf(block_center,'./data/block.gpkg',layer = 'block_center',overwrite = T)

block_center = read_sf('./data/block.gpkg',layer = 'block_center')

block_center |> 
  st_transform(32652) |> 
  st_buffer(dist = units::set_units(600,'m')) |> 
  lwgeom::st_minimum_bounding_circle() |> 
  st_transform(4326) |> 
  write_sf('./data/block.gpkg',layer = 'circle', overwrite = TRUE)

block_center |> 
  st_transform(32652) |> 
  st_buffer(dist = units::set_units(600,'m')) |> 
  lwgeom::st_minimum_bounding_circle() |> 
  st_transform(4326) |> 
  st_bbox() |> 
  st_as_sfc() |> 
  st_as_sf() |> 
  write_sf('./data/block.gpkg',layer = 'squre', overwrite = TRUE)

block_studyarea = read_sf('./data/block.gpkg',layer = 'squre')
mapview::mapview(block_studyarea)

blockbb = block_studyarea |> 
  st_bbox() |> 
  as.double()

opq(bbox = blockbb) %>% 
  add_osm_feature(key = 'building') %>% 
  osmdata_sf() %>% 
  .$osm_polygons %>% 
  dplyr::select(name) %>% 
  st_make_valid() %>% 
  st_intersection(block_studyarea) %>% 
  write_sf('./data/block.gpkg',layer = 'building',overwrite = T)

opq(bbox = blockbb) %>% 
  add_osm_features(features = list(
    'landuse' = c('grass','orchard','forest'),
    'natural' = c('island','wood'),
    'leisure' = 'park')) %>% 
  osmdata_sf() %>% 
  .$osm_polygons %>% 
  select(name) %>% 
  st_make_valid() %>% 
  st_intersection(block_studyarea) %>% 
  write_sf('./data/block.gpkg',layer = 'green',overwrite = T)

opq(bbox = blockbb) %>%
  add_osm_features(features = list(
    "natural" = c("water","bay"))) %>%
  osmdata_sf() %>%
  .$osm_polygons %>%
  select(natural) %>%
  st_make_valid() %>%
  st_intersection(block_studyarea) %>% 
  write_sf('./data/block.gpkg',layer = 'water',overwrite = T)

opq(bbox = blockbb) %>% 
  add_osm_feature(key = 'highway') %>% 
  osmdata_sf() %>% 
  .$osm_lines %>% 
  select(name,highway) %>% 
  st_make_valid() %>% 
  st_intersection(block_studyarea) %>% 
  write_sf('./data/block.gpkg',layer = 'road',overwrite = T)

library(terra)

bh = rast('./data/CNBH10m_X127Y45.tif') |> 
  project(crs("EPSG:4326"),
          method = 'bilinear') |> 
  crop(vect(block_studyarea),mask = TRUE)

bh = rast('./data/BH.tif')
building = read_sf('./data/block.gpkg',layer = 'building') 
building$bh = bh |> 
  zonal(vect(building),fun = 'mean',na.rm = TRUE) |> 
  pull(1)
write_sf(building,'./data/block.gpkg',layer = 'building',overwrite = TRUE)

library(mapgl)

maplibre(
  style = maptiler_style("basic"),
  center = c(unname(st_coordinates(block_center)[1,1]), 
             unname(st_coordinates(block_center)[1,2])),
  zoom = 15.5,
  pitch = 60,
  bearing = -15,
  bounds = block_studyarea
) |>
  add_vector_source(
    id = "openmaptiles",
    url = paste0("https://api.maptiler.com/tiles/v3/tiles.json?key=",
                 getOption("maptiler.key"))
  ) |>
  add_fill_extrusion_layer(
    id = "3d-buildings",
    source = building |> 
      select(-name) |> 
      mutate(bh = if_else(is.na(bh),
                          min(building$bh,na.rm = TRUE),
                          bh)),
    # source_layer = 'building',
    fill_extrusion_color = interpolate(
      column = 'bh',
      values = c(10, 20, 35),
      stops = c('lightgray', 'royalblue', 'lightblue')
    ),
    fill_extrusion_height = list(
      'interpolate',
      list('linear'),
      list('zoom'),
      15,
      0,
      16,
      list('get', 'bh')
    )
)

maptiles::get_tiles(block_studyarea,
                    provider = "Esri.WorldImagery",
                    zoom=18,
                    crop=TRUE) -> WorldImagery

elev = elevatr::get_elev_raster(block_studyarea,
                                z = 14) |> 
  terra::rast()


buildings = read_sf('./data/block.gpkg',layer = 'building')
greenspace = read_sf('./data/block.gpkg',layer = 'green')
road = read_sf('./data/block.gpkg',layer = 'road')
water = read_sf('./data/block.gpkg',layer = 'water')

basemap = ggplot() +
  geom_sf(data = buildings,fill = '#c1c3c0') +
  geom_sf(data = greenspace,fill = '#c1c3c0') +
  geom_sf(data = road,color = '#c1c3c0') +
  geom_sf(data = water,color = '#c1c3c0') +
  theme_void() # +
# geom_sf(data = hitb,col = 'black', fill = 'transparent')

b = basemap + 
  geom_sf(data = buildings, fill = '#90766f')

g = basemap + 
  geom_sf(data = greenspace, fill = '#748f61') +
  geom_sf(data = water, fill = '#047dd6')

r = basemap + 
  geom_sf(data = road, color = 'yellow')

# w = basemap + 
#   geom_sf(data = water, fill = '#047dd6')

ggsave(plot = basemap, filename = './figures/basemap.png',
       dpi = 100, width = 3,height = 3)
ggsave(plot = b, filename = './figures/buildings.png',
       dpi = 100, width = 3,height = 3)
ggsave(plot = g, filename = './figures/green.png',
       dpi = 100, width = 3,height = 3)
ggsave(plot = r, filename = './figures/road.png',
       dpi = 100, width = 3,height = 3)
ggsave(plot = w, filename = './figures/water.png',
       dpi = 100, width = 3,height = 3)

